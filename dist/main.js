var e={n:r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},d:(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r);const n=require("child_process");var t=e.n(n);const o=require("electron"),a=require("module");var i=e.n(a);const s=require("path");var c=e.n(s);const l=require("fs");var p=e.n(l);const d=require("inspector");process.argv.join("").includes("--debug")&&((0,d.open)(),(0,d.waitForDebugger)());const u=require("sucrase"),m=require("sass"),y="dist"===c().basename(__dirname)?c().join(__dirname,"..","cache"):c().resolve(__dirname,"..","..","cache");p().existsSync(y)||p().mkdirSync(y),o.ipcMain.handle("pccompat-run-command",((e,r,n)=>new Promise(((e,o)=>{t().exec(r,{cwd:n},((r,n)=>{if(r)return o(r);e(n)}))})))),o.ipcMain.on("pccompat-get-app-path",(e=>{e.returnValue=o.app.getAppPath()})),o.ipcMain.on("pccompat-get-window-data",(e=>{e.returnValue=e.sender.kernelWindowData})),o.ipcMain.on("pccompat-compile-sass",((e,r)=>{let n="";try{n=m.compile(r).css.toString()}catch(r){e.sender.executeJavaScript(function(e){return`console.error(Object.assign(new Error(${JSON.stringify(e.message)}), {\n      stack: ${JSON.stringify(e.stack)},\n      name: ${JSON.stringify(e.name)}\n    }));`.trim()}(r))}e.returnValue=n})),o.ipcMain.on("pccompat-compile-jsx",((e,r)=>{if(!p().existsSync(r))return void(e.returnValue="");const n=p().readFileSync(r,"utf8");let t=0;for(let e=0;e<n.length;e++)t=(t<<5)-t+n.charCodeAt(e),t&=t;try{e.returnValue=p().readFileSync(c().join(y,t.toString()),"utf-8")}catch{const{code:o}=u.transform(n,{transforms:["jsx","imports","typescript"],filePath:r});p().writeFileSync(c().join(y,t.toString()),o),e.returnValue=o}})),o.ipcMain.handle("pccompat-open-devtools",((e,r)=>{const n=o.BrowserWindow.fromWebContents(e.sender);n&&(r&&!n.webContents.isDevToolsOpened()?n.webContents.openDevTools():n.webContents.closeDevTools())})),o.app.whenReady().then((()=>{const{whitelist:e}=require("#kernel/core/patchers/CSPWhitelist");console.log(e),e("pc-compat",/.*/)}));const _=c().resolve("dist"===c().basename(__dirname)?c().resolve(__dirname,".."):__dirname,"node_modules");if(!p().existsSync(_)&&!__dirname.includes(".asar"))try{(0,n.execSync)("npm install --production",{cwd:__dirname})}catch(e){console.error("Failed to automatically install node modules:",e)}i().globalPaths.push(_);var f=exports;for(var g in r)f[g]=r[g];r.__esModule&&Object.defineProperty(f,"__esModule",{value:!0});